/*
 * Safekeeping Server
 * Safekeeping OpenAPI
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.safekeeping.cxf.rest.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.vmware.safekeeping.cxf.rest.model.WindowsQuiesceSpecVssBackupContext;
import com.vmware.safekeeping.cxf.rest.model.WindowsQuiesceSpecVssBackupType;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * VirtualMachineQuisceSpec
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2022-08-31T19:06:45.540Z[GMT]")public class VirtualMachineQuisceSpec   {
  @JsonProperty("Timeout")
  private Integer timeout = null;

  @JsonProperty("VssBackupContext")
  private WindowsQuiesceSpecVssBackupContext vssBackupContext = null;

  @JsonProperty("VssBackupType")
  private WindowsQuiesceSpecVssBackupType vssBackupType = null;

  @JsonProperty("VssBootableSystemState")
  private Boolean vssBootableSystemState = null;

  @JsonProperty("VssPartialFileSupport")
  private Boolean vssPartialFileSupport = null;

  @JsonProperty("UseWindowsVss")
  private Boolean useWindowsVss = null;

  @JsonProperty("VssRetryOnFail")
  private Boolean vssRetryOnFail = null;

  public VirtualMachineQuisceSpec timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

  /**
   * Get timeout
   * @return timeout
   **/
  @JsonProperty("Timeout")
  @Schema(description = "")
  public Integer getTimeout() {
    return timeout;
  }

  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }

  public VirtualMachineQuisceSpec vssBackupContext(WindowsQuiesceSpecVssBackupContext vssBackupContext) {
    this.vssBackupContext = vssBackupContext;
    return this;
  }

  /**
   * Get vssBackupContext
   * @return vssBackupContext
   **/
  @JsonProperty("VssBackupContext")
  @Schema(description = "")
  @Valid
  public WindowsQuiesceSpecVssBackupContext getVssBackupContext() {
    return vssBackupContext;
  }

  public void setVssBackupContext(WindowsQuiesceSpecVssBackupContext vssBackupContext) {
    this.vssBackupContext = vssBackupContext;
  }

  public VirtualMachineQuisceSpec vssBackupType(WindowsQuiesceSpecVssBackupType vssBackupType) {
    this.vssBackupType = vssBackupType;
    return this;
  }

  /**
   * Get vssBackupType
   * @return vssBackupType
   **/
  @JsonProperty("VssBackupType")
  @Schema(description = "")
  @Valid
  public WindowsQuiesceSpecVssBackupType getVssBackupType() {
    return vssBackupType;
  }

  public void setVssBackupType(WindowsQuiesceSpecVssBackupType vssBackupType) {
    this.vssBackupType = vssBackupType;
  }

  public VirtualMachineQuisceSpec vssBootableSystemState(Boolean vssBootableSystemState) {
    this.vssBootableSystemState = vssBootableSystemState;
    return this;
  }

  /**
   * Get vssBootableSystemState
   * @return vssBootableSystemState
   **/
  @JsonProperty("VssBootableSystemState")
  @Schema(description = "")
  public Boolean isVssBootableSystemState() {
    return vssBootableSystemState;
  }

  public void setVssBootableSystemState(Boolean vssBootableSystemState) {
    this.vssBootableSystemState = vssBootableSystemState;
  }

  public VirtualMachineQuisceSpec vssPartialFileSupport(Boolean vssPartialFileSupport) {
    this.vssPartialFileSupport = vssPartialFileSupport;
    return this;
  }

  /**
   * Get vssPartialFileSupport
   * @return vssPartialFileSupport
   **/
  @JsonProperty("VssPartialFileSupport")
  @Schema(description = "")
  public Boolean isVssPartialFileSupport() {
    return vssPartialFileSupport;
  }

  public void setVssPartialFileSupport(Boolean vssPartialFileSupport) {
    this.vssPartialFileSupport = vssPartialFileSupport;
  }

  public VirtualMachineQuisceSpec useWindowsVss(Boolean useWindowsVss) {
    this.useWindowsVss = useWindowsVss;
    return this;
  }

  /**
   * Get useWindowsVss
   * @return useWindowsVss
   **/
  @JsonProperty("UseWindowsVss")
  @Schema(description = "")
  public Boolean isUseWindowsVss() {
    return useWindowsVss;
  }

  public void setUseWindowsVss(Boolean useWindowsVss) {
    this.useWindowsVss = useWindowsVss;
  }

  public VirtualMachineQuisceSpec vssRetryOnFail(Boolean vssRetryOnFail) {
    this.vssRetryOnFail = vssRetryOnFail;
    return this;
  }

  /**
   * Get vssRetryOnFail
   * @return vssRetryOnFail
   **/
  @JsonProperty("VssRetryOnFail")
  @Schema(description = "")
  public Boolean isVssRetryOnFail() {
    return vssRetryOnFail;
  }

  public void setVssRetryOnFail(Boolean vssRetryOnFail) {
    this.vssRetryOnFail = vssRetryOnFail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualMachineQuisceSpec virtualMachineQuisceSpec = (VirtualMachineQuisceSpec) o;
    return Objects.equals(this.timeout, virtualMachineQuisceSpec.timeout) &&
        Objects.equals(this.vssBackupContext, virtualMachineQuisceSpec.vssBackupContext) &&
        Objects.equals(this.vssBackupType, virtualMachineQuisceSpec.vssBackupType) &&
        Objects.equals(this.vssBootableSystemState, virtualMachineQuisceSpec.vssBootableSystemState) &&
        Objects.equals(this.vssPartialFileSupport, virtualMachineQuisceSpec.vssPartialFileSupport) &&
        Objects.equals(this.useWindowsVss, virtualMachineQuisceSpec.useWindowsVss) &&
        Objects.equals(this.vssRetryOnFail, virtualMachineQuisceSpec.vssRetryOnFail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timeout, vssBackupContext, vssBackupType, vssBootableSystemState, vssPartialFileSupport, useWindowsVss, vssRetryOnFail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualMachineQuisceSpec {\n");
    
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    vssBackupContext: ").append(toIndentedString(vssBackupContext)).append("\n");
    sb.append("    vssBackupType: ").append(toIndentedString(vssBackupType)).append("\n");
    sb.append("    vssBootableSystemState: ").append(toIndentedString(vssBootableSystemState)).append("\n");
    sb.append("    vssPartialFileSupport: ").append(toIndentedString(vssPartialFileSupport)).append("\n");
    sb.append("    useWindowsVss: ").append(toIndentedString(useWindowsVss)).append("\n");
    sb.append("    vssRetryOnFail: ").append(toIndentedString(vssRetryOnFail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
