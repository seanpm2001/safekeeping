/*
 * Safekeeping Server
 * Safekeeping OpenAPI
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.safekeeping.cxf.rest.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.vmware.safekeeping.cxf.rest.model.BackupMode;
import com.vmware.safekeeping.cxf.rest.model.QueryBlocksOption;
import com.vmware.safekeeping.cxf.rest.model.VirtualBackupOptions;
import com.vmware.safekeeping.cxf.rest.model.VirtualMachineQuisceSpec;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * BackupOptions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2022-08-31T19:06:45.540Z[GMT]")public class BackupOptions extends VirtualBackupOptions implements OneOfbackupBody  {
  @JsonProperty("MaxBlockSize")
  private Integer maxBlockSize = null;

  @JsonProperty("QueryBlocksOption")
  private QueryBlocksOption queryBlocksOption = null;

  @JsonProperty("QuisceSpec")
  private VirtualMachineQuisceSpec quisceSpec = null;

  @JsonProperty("RequestedBackupMode")
  private BackupMode requestedBackupMode = null;

  @JsonProperty("RequestedTransportMode")
  private String requestedTransportMode = null;

  @JsonProperty("Cipher")
  private Boolean cipher = null;

  @JsonProperty("Compression")
  private Boolean compression = null;

  public BackupOptions maxBlockSize(Integer maxBlockSize) {
    this.maxBlockSize = maxBlockSize;
    return this;
  }

  /**
   * Get maxBlockSize
   * @return maxBlockSize
   **/
  @JsonProperty("MaxBlockSize")
  @Schema(description = "")
  public Integer getMaxBlockSize() {
    return maxBlockSize;
  }

  public void setMaxBlockSize(Integer maxBlockSize) {
    this.maxBlockSize = maxBlockSize;
  }

  public BackupOptions queryBlocksOption(QueryBlocksOption queryBlocksOption) {
    this.queryBlocksOption = queryBlocksOption;
    return this;
  }

  /**
   * Get queryBlocksOption
   * @return queryBlocksOption
   **/
  @JsonProperty("QueryBlocksOption")
  @Schema(description = "")
  @Valid
  public QueryBlocksOption getQueryBlocksOption() {
    return queryBlocksOption;
  }

  public void setQueryBlocksOption(QueryBlocksOption queryBlocksOption) {
    this.queryBlocksOption = queryBlocksOption;
  }

  public BackupOptions quisceSpec(VirtualMachineQuisceSpec quisceSpec) {
    this.quisceSpec = quisceSpec;
    return this;
  }

  /**
   * Get quisceSpec
   * @return quisceSpec
   **/
  @JsonProperty("QuisceSpec")
  @Schema(description = "")
  @Valid
  public VirtualMachineQuisceSpec getQuisceSpec() {
    return quisceSpec;
  }

  public void setQuisceSpec(VirtualMachineQuisceSpec quisceSpec) {
    this.quisceSpec = quisceSpec;
  }

  public BackupOptions requestedBackupMode(BackupMode requestedBackupMode) {
    this.requestedBackupMode = requestedBackupMode;
    return this;
  }

  /**
   * Get requestedBackupMode
   * @return requestedBackupMode
   **/
  @JsonProperty("RequestedBackupMode")
  @Schema(description = "")
  @Valid
  public BackupMode getRequestedBackupMode() {
    return requestedBackupMode;
  }

  public void setRequestedBackupMode(BackupMode requestedBackupMode) {
    this.requestedBackupMode = requestedBackupMode;
  }

  public BackupOptions requestedTransportMode(String requestedTransportMode) {
    this.requestedTransportMode = requestedTransportMode;
    return this;
  }

  /**
   * Get requestedTransportMode
   * @return requestedTransportMode
   **/
  @JsonProperty("RequestedTransportMode")
  @Schema(description = "")
  public String getRequestedTransportMode() {
    return requestedTransportMode;
  }

  public void setRequestedTransportMode(String requestedTransportMode) {
    this.requestedTransportMode = requestedTransportMode;
  }

  public BackupOptions cipher(Boolean cipher) {
    this.cipher = cipher;
    return this;
  }

  /**
   * Get cipher
   * @return cipher
   **/
  @JsonProperty("Cipher")
  @Schema(description = "")
  public Boolean isCipher() {
    return cipher;
  }

  public void setCipher(Boolean cipher) {
    this.cipher = cipher;
  }

  public BackupOptions compression(Boolean compression) {
    this.compression = compression;
    return this;
  }

  /**
   * Get compression
   * @return compression
   **/
  @JsonProperty("Compression")
  @Schema(description = "")
  public Boolean isCompression() {
    return compression;
  }

  public void setCompression(Boolean compression) {
    this.compression = compression;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackupOptions backupOptions = (BackupOptions) o;
    return Objects.equals(this.maxBlockSize, backupOptions.maxBlockSize) &&
        Objects.equals(this.queryBlocksOption, backupOptions.queryBlocksOption) &&
        Objects.equals(this.quisceSpec, backupOptions.quisceSpec) &&
        Objects.equals(this.requestedBackupMode, backupOptions.requestedBackupMode) &&
        Objects.equals(this.requestedTransportMode, backupOptions.requestedTransportMode) &&
        Objects.equals(this.cipher, backupOptions.cipher) &&
        Objects.equals(this.compression, backupOptions.compression) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxBlockSize, queryBlocksOption, quisceSpec, requestedBackupMode, requestedTransportMode, cipher, compression, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackupOptions {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    maxBlockSize: ").append(toIndentedString(maxBlockSize)).append("\n");
    sb.append("    queryBlocksOption: ").append(toIndentedString(queryBlocksOption)).append("\n");
    sb.append("    quisceSpec: ").append(toIndentedString(quisceSpec)).append("\n");
    sb.append("    requestedBackupMode: ").append(toIndentedString(requestedBackupMode)).append("\n");
    sb.append("    requestedTransportMode: ").append(toIndentedString(requestedTransportMode)).append("\n");
    sb.append("    cipher: ").append(toIndentedString(cipher)).append("\n");
    sb.append("    compression: ").append(toIndentedString(compression)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
