/*
 * Safekeeping Server
 * Safekeeping OpenAPI
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.safekeeping.cxf.rest.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.vmware.safekeeping.cxf.rest.model.RepositoryOptions;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * AwsS3RepositoryOptions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2022-08-31T19:06:45.540Z[GMT]")public class AwsS3RepositoryOptions extends RepositoryOptions implements OneOfconnectRepositoryBody  {
  @JsonProperty("AccessKey")
  private String accessKey = null;

  @JsonProperty("Backet")
  private String backet = null;

  @JsonProperty("Region")
  private String region = null;

  @JsonProperty("SecretKey")
  private String secretKey = null;

  @JsonProperty("Base64")
  private Boolean base64 = null;

  public AwsS3RepositoryOptions accessKey(String accessKey) {
    this.accessKey = accessKey;
    return this;
  }

  /**
   * Get accessKey
   * @return accessKey
   **/
  @JsonProperty("AccessKey")
  @Schema(description = "")
  public String getAccessKey() {
    return accessKey;
  }

  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }

  public AwsS3RepositoryOptions backet(String backet) {
    this.backet = backet;
    return this;
  }

  /**
   * Get backet
   * @return backet
   **/
  @JsonProperty("Backet")
  @Schema(description = "")
  public String getBacket() {
    return backet;
  }

  public void setBacket(String backet) {
    this.backet = backet;
  }

  public AwsS3RepositoryOptions region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   **/
  @JsonProperty("Region")
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public AwsS3RepositoryOptions secretKey(String secretKey) {
    this.secretKey = secretKey;
    return this;
  }

  /**
   * Get secretKey
   * @return secretKey
   **/
  @JsonProperty("SecretKey")
  @Schema(description = "")
  public String getSecretKey() {
    return secretKey;
  }

  public void setSecretKey(String secretKey) {
    this.secretKey = secretKey;
  }

  public AwsS3RepositoryOptions base64(Boolean base64) {
    this.base64 = base64;
    return this;
  }

  /**
   * Get base64
   * @return base64
   **/
  @JsonProperty("Base64")
  @Schema(description = "")
  public Boolean isBase64() {
    return base64;
  }

  public void setBase64(Boolean base64) {
    this.base64 = base64;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsS3RepositoryOptions awsS3RepositoryOptions = (AwsS3RepositoryOptions) o;
    return Objects.equals(this.accessKey, awsS3RepositoryOptions.accessKey) &&
        Objects.equals(this.backet, awsS3RepositoryOptions.backet) &&
        Objects.equals(this.region, awsS3RepositoryOptions.region) &&
        Objects.equals(this.secretKey, awsS3RepositoryOptions.secretKey) &&
        Objects.equals(this.base64, awsS3RepositoryOptions.base64) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKey, backet, region, secretKey, base64, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsS3RepositoryOptions {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    backet: ").append(toIndentedString(backet)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    secretKey: ").append(toIndentedString(secretKey)).append("\n");
    sb.append("    base64: ").append(toIndentedString(base64)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
