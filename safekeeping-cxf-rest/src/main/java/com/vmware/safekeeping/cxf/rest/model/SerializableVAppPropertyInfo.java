/*
 * Safekeeping Server
 * Safekeeping OpenAPI
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.safekeeping.cxf.rest.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * SerializableVAppPropertyInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2022-08-31T19:06:45.540Z[GMT]")public class SerializableVAppPropertyInfo   {
  @JsonProperty("Category")
  private String category = null;

  @JsonProperty("ClassId")
  private String classId = null;

  @JsonProperty("DefaultValue")
  private String defaultValue = null;

  @JsonProperty("Description")
  private String description = null;

  @JsonProperty("Id")
  private String id = null;

  @JsonProperty("InstanceId")
  private String instanceId = null;

  @JsonProperty("Key")
  private Integer key = null;

  @JsonProperty("Label")
  private String label = null;

  @JsonProperty("Type")
  private String type = null;

  @JsonProperty("TypeReference")
  private String typeReference = null;

  @JsonProperty("UserConfigurable")
  private Boolean userConfigurable = null;

  @JsonProperty("Value")
  private String value = null;

  public SerializableVAppPropertyInfo category(String category) {
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   **/
  @JsonProperty("Category")
  @Schema(description = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public SerializableVAppPropertyInfo classId(String classId) {
    this.classId = classId;
    return this;
  }

  /**
   * Get classId
   * @return classId
   **/
  @JsonProperty("ClassId")
  @Schema(description = "")
  public String getClassId() {
    return classId;
  }

  public void setClassId(String classId) {
    this.classId = classId;
  }

  public SerializableVAppPropertyInfo defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

  /**
   * Get defaultValue
   * @return defaultValue
   **/
  @JsonProperty("DefaultValue")
  @Schema(description = "")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  public SerializableVAppPropertyInfo description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   **/
  @JsonProperty("Description")
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SerializableVAppPropertyInfo id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   **/
  @JsonProperty("Id")
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SerializableVAppPropertyInfo instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   **/
  @JsonProperty("InstanceId")
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public SerializableVAppPropertyInfo key(Integer key) {
    this.key = key;
    return this;
  }

  /**
   * Get key
   * @return key
   **/
  @JsonProperty("Key")
  @Schema(description = "")
  public Integer getKey() {
    return key;
  }

  public void setKey(Integer key) {
    this.key = key;
  }

  public SerializableVAppPropertyInfo label(String label) {
    this.label = label;
    return this;
  }

  /**
   * Get label
   * @return label
   **/
  @JsonProperty("Label")
  @Schema(description = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public SerializableVAppPropertyInfo type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   **/
  @JsonProperty("Type")
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public SerializableVAppPropertyInfo typeReference(String typeReference) {
    this.typeReference = typeReference;
    return this;
  }

  /**
   * Get typeReference
   * @return typeReference
   **/
  @JsonProperty("TypeReference")
  @Schema(description = "")
  public String getTypeReference() {
    return typeReference;
  }

  public void setTypeReference(String typeReference) {
    this.typeReference = typeReference;
  }

  public SerializableVAppPropertyInfo userConfigurable(Boolean userConfigurable) {
    this.userConfigurable = userConfigurable;
    return this;
  }

  /**
   * Get userConfigurable
   * @return userConfigurable
   **/
  @JsonProperty("UserConfigurable")
  @Schema(description = "")
  public Boolean isUserConfigurable() {
    return userConfigurable;
  }

  public void setUserConfigurable(Boolean userConfigurable) {
    this.userConfigurable = userConfigurable;
  }

  public SerializableVAppPropertyInfo value(String value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   **/
  @JsonProperty("Value")
  @Schema(description = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SerializableVAppPropertyInfo serializableVAppPropertyInfo = (SerializableVAppPropertyInfo) o;
    return Objects.equals(this.category, serializableVAppPropertyInfo.category) &&
        Objects.equals(this.classId, serializableVAppPropertyInfo.classId) &&
        Objects.equals(this.defaultValue, serializableVAppPropertyInfo.defaultValue) &&
        Objects.equals(this.description, serializableVAppPropertyInfo.description) &&
        Objects.equals(this.id, serializableVAppPropertyInfo.id) &&
        Objects.equals(this.instanceId, serializableVAppPropertyInfo.instanceId) &&
        Objects.equals(this.key, serializableVAppPropertyInfo.key) &&
        Objects.equals(this.label, serializableVAppPropertyInfo.label) &&
        Objects.equals(this.type, serializableVAppPropertyInfo.type) &&
        Objects.equals(this.typeReference, serializableVAppPropertyInfo.typeReference) &&
        Objects.equals(this.userConfigurable, serializableVAppPropertyInfo.userConfigurable) &&
        Objects.equals(this.value, serializableVAppPropertyInfo.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, classId, defaultValue, description, id, instanceId, key, label, type, typeReference, userConfigurable, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SerializableVAppPropertyInfo {\n");
    
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    classId: ").append(toIndentedString(classId)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeReference: ").append(toIndentedString(typeReference)).append("\n");
    sb.append("    userConfigurable: ").append(toIndentedString(userConfigurable)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
